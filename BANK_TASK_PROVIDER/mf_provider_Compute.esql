



CREATE COMPUTE MODULE mf_provider_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
	    set OutputRoot.JSON.Data.Root.Header=InputRoot.XMLNSC.Root.Header;
		DECLARE i INTEGER 1;
		declare tag CHARACTER FIELDNAME(InputRoot.XMLNSC.Root.Body.Data.[1]);
		create field OutputRoot.JSON.Data.Root.Body.Data.{tag}.book type JSON.Array;
		declare var REFERENCE to InputRoot.XMLNSC.Root.Body.Data.{tag}.book[1];
		--declare res REFERENCE to OutputRoot.JSON.Data.Root.Body.Data.result.book;
		while LASTMOVE(var) do
			create LASTCHILD of OutputRoot.JSON.Data.Root.Body.Data.{tag}.book.Item[i] name 'id' value var.id;
			create LASTCHILD of OutputRoot.JSON.Data.Root.Body.Data.{tag}.book.Item[i] name 'author' value var.author;
			create LASTCHILD of OutputRoot.JSON.Data.Root.Body.Data.{tag}.book.Item[i] name 'title' value var.title;
			create LASTCHILD of OutputRoot.JSON.Data.Root.Body.Data.{tag}.book.Item[i] name 'genre' value var.genre;
			create LASTCHILD of OutputRoot.JSON.Data.Root.Body.Data.{tag}.book.Item[i] name 'price' value var.price;
			create LASTCHILD of OutputRoot.JSON.Data.Root.Body.Data.{tag}.book.Item[i] name 'publish_date' value var.publish_date;
			create LASTCHILD of OutputRoot.JSON.Data.Root.Body.Data.{tag}.book.Item[i] name 'description' value var.description;
			set i=i+1;
			move var NEXTSIBLING;
		end while;
		END;
	END MODULE;