path crypt;

CREATE COMPUTE MODULE DirectDebitsInputCatchHandler_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE ref REFERENCE TO InputExceptionList.*[>];
		DECLARE Text CHARACTER;
		DECLARE Itm ROW;

		WHILE LASTMOVE(ref) DO
			MOVE ref LASTCHILD;
			IF ref.Number IS NOT NULL THEN
				SET Text = ref.Text;
				SET Itm.item[] = ref.Insert[];
			END IF;
		END WHILE;

		DECLARE v INTEGER CARDINALITY(Itm.item[]);
		--IF v=4 THEN
		SET OutputRoot.JSON.Data.error.message = Itm.item[v-3].Text;
		SET OutputRoot.JSON.Data.error.statusCode = Itm.item[v-2].Text;
		SET OutputRoot.JSON.Data.error.error_desc = Text;

		SET OutputRoot.JSON.Data.error.messagId = 563214785965219762;
		SET OutputRoot.JSON.Data.error.additionalData.Error.esb_error_code = Itm.item[v-1].Text;
		SET OutputRoot.JSON.Data.error.additionalData.Error.esb_error_desc = Itm.item[v].Text;
		-- ELSE
		-- SET OutputRoot.JSON.Data.error.message = 'Failure';
		-- SET OutputRoot.JSON.Data.error.statusCode = 404;
		-- SET OutputRoot.JSON.Data.error.error_desc = Text;
		--
		-- SET OutputRoot.JSON.Data.error.messagId = 563214785965219762;
		-- SET OutputRoot.JSON.Data.error.additionalData.Error.esb_error_code = Itm.item[v-1].Text;
		-- SET OutputRoot.JSON.Data.error.additionalData.Error.esb_error_desc = Itm.item[v].Text;
		-- END IF;

		DECLARE enc CHARACTER;
		DECLARE ref1 REFERENCE TO OutputRoot.JSON.Data;
		DECLARE data1 CHARACTER cast(ASBITSTREAM(ref1) as CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		call encrypt(data1, 'shreyash') into enc;
		SET OutputRoot = NULL;
		SET OutputRoot.JSON.Data.enc = enc;


	END;
END MODULE;